{
  "hints": [],
  "groups": [
    {
      "sourceType": "org.springframework.boot.autoconfigure.security.oauth2.authserver.AuthorizationServerProperties",
      "name": "security.oauth2.authorization",
      "type": "org.springframework.boot.autoconfigure.security.oauth2.authserver.AuthorizationServerProperties"
    },
    {
      "sourceType": "org.springframework.boot.autoconfigure.security.oauth2.OAuth2ClientProperties",
      "name": "security.oauth2.client",
      "type": "org.springframework.boot.autoconfigure.security.oauth2.OAuth2ClientProperties"
    },
    {
      "sourceType": "org.springframework.boot.autoconfigure.security.oauth2.authserver.OAuth2AuthorizationServerConfiguration$BaseClientDetailsConfiguration",
      "name": "security.oauth2.client",
      "sourceMethod": "oauth2ClientDetails()",
      "type": "org.springframework.security.oauth2.provider.client.BaseClientDetails"
    },
    {
      "sourceType": "org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ProtectedResourceDetailsConfiguration",
      "name": "security.oauth2.client",
      "sourceMethod": "oauth2RemoteResource()",
      "type": "org.springframework.security.oauth2.client.token.grant.code.AuthorizationCodeResourceDetails"
    },
    {
      "sourceType": "org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2RestOperationsConfiguration$SingletonScopedConfiguration",
      "name": "security.oauth2.client",
      "sourceMethod": "oauth2RemoteResource()",
      "type": "org.springframework.security.oauth2.client.token.grant.client.ClientCredentialsResourceDetails"
    },
    {
      "sourceType": "org.springframework.boot.autoconfigure.security.oauth2.resource.ResourceServerProperties",
      "name": "security.oauth2.resource",
      "type": "org.springframework.boot.autoconfigure.security.oauth2.resource.ResourceServerProperties"
    },
    {
      "sourceType": "org.springframework.boot.autoconfigure.security.oauth2.resource.ResourceServerProperties",
      "name": "security.oauth2.resource.jwk",
      "sourceMethod": "getJwk()",
      "type": "org.springframework.boot.autoconfigure.security.oauth2.resource.ResourceServerProperties$Jwk"
    },
    {
      "sourceType": "org.springframework.boot.autoconfigure.security.oauth2.resource.ResourceServerProperties",
      "name": "security.oauth2.resource.jwt",
      "sourceMethod": "getJwt()",
      "type": "org.springframework.boot.autoconfigure.security.oauth2.resource.ResourceServerProperties$Jwt"
    },
    {
      "sourceType": "org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2SsoProperties",
      "name": "security.oauth2.sso",
      "type": "org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2SsoProperties"
    }
  ],
  "properties": [
    {
      "sourceType": "org.springframework.boot.autoconfigure.security.oauth2.authserver.AuthorizationServerProperties",
      "name": "security.oauth2.authorization.check-token-access",
      "description": "Spring Security access rule for the check token endpoint (e.g. a SpEL expression\n like \"isAuthenticated()\") . Default is empty, which is interpreted as \"denyAll()\"\n (no access).",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.autoconfigure.security.oauth2.authserver.AuthorizationServerProperties",
      "name": "security.oauth2.authorization.realm",
      "description": "Realm name for client authentication. If an unauthenticated request comes in to the\n token endpoint, it will respond with a challenge including this name.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.autoconfigure.security.oauth2.authserver.AuthorizationServerProperties",
      "name": "security.oauth2.authorization.token-key-access",
      "description": "Spring Security access rule for the token key endpoint (e.g. a SpEL expression like\n \"isAuthenticated()\"). Default is empty, which is interpreted as \"denyAll()\" (no\n access).",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.security.oauth2.client.token.grant.code.AuthorizationCodeResourceDetails",
      "name": "security.oauth2.client.access-token-uri",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.security.oauth2.client.token.grant.client.ClientCredentialsResourceDetails",
      "name": "security.oauth2.client.access-token-uri",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.security.oauth2.provider.client.BaseClientDetails",
      "name": "security.oauth2.client.access-token-validity-seconds",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.security.oauth2.provider.client.BaseClientDetails",
      "name": "security.oauth2.client.additional-information",
      "type": "java.util.Map<java.lang.String,java.lang.Object>"
    },
    {
      "sourceType": "org.springframework.security.oauth2.client.token.grant.code.AuthorizationCodeResourceDetails",
      "name": "security.oauth2.client.authentication-scheme",
      "type": "org.springframework.security.oauth2.common.AuthenticationScheme"
    },
    {
      "sourceType": "org.springframework.security.oauth2.client.token.grant.client.ClientCredentialsResourceDetails",
      "name": "security.oauth2.client.authentication-scheme",
      "type": "org.springframework.security.oauth2.common.AuthenticationScheme"
    },
    {
      "sourceType": "org.springframework.security.oauth2.provider.client.BaseClientDetails",
      "name": "security.oauth2.client.authorities",
      "type": "java.util.Collection<org.springframework.security.core.GrantedAuthority>"
    },
    {
      "sourceType": "org.springframework.security.oauth2.provider.client.BaseClientDetails",
      "name": "security.oauth2.client.authorized-grant-types",
      "type": "java.util.Set<java.lang.String>"
    },
    {
      "sourceType": "org.springframework.security.oauth2.provider.client.BaseClientDetails",
      "name": "security.oauth2.client.auto-approve-scopes",
      "type": "java.util.Set<java.lang.String>"
    },
    {
      "sourceType": "org.springframework.security.oauth2.client.token.grant.code.AuthorizationCodeResourceDetails",
      "name": "security.oauth2.client.client-authentication-scheme",
      "type": "org.springframework.security.oauth2.common.AuthenticationScheme"
    },
    {
      "sourceType": "org.springframework.security.oauth2.client.token.grant.client.ClientCredentialsResourceDetails",
      "name": "security.oauth2.client.client-authentication-scheme",
      "type": "org.springframework.security.oauth2.common.AuthenticationScheme"
    },
    {
      "sourceType": "org.springframework.boot.autoconfigure.security.oauth2.OAuth2ClientProperties",
      "name": "security.oauth2.client.client-id",
      "description": "OAuth2 client id.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.security.oauth2.provider.client.BaseClientDetails",
      "name": "security.oauth2.client.client-id",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.security.oauth2.client.token.grant.code.AuthorizationCodeResourceDetails",
      "name": "security.oauth2.client.client-id",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.security.oauth2.client.token.grant.client.ClientCredentialsResourceDetails",
      "name": "security.oauth2.client.client-id",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.autoconfigure.security.oauth2.OAuth2ClientProperties",
      "name": "security.oauth2.client.client-secret",
      "description": "OAuth2 client secret. A random secret is generated by default.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.security.oauth2.provider.client.BaseClientDetails",
      "name": "security.oauth2.client.client-secret",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.security.oauth2.client.token.grant.code.AuthorizationCodeResourceDetails",
      "name": "security.oauth2.client.client-secret",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.security.oauth2.client.token.grant.client.ClientCredentialsResourceDetails",
      "name": "security.oauth2.client.client-secret",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.security.oauth2.client.token.grant.code.AuthorizationCodeResourceDetails",
      "name": "security.oauth2.client.grant-type",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.security.oauth2.client.token.grant.client.ClientCredentialsResourceDetails",
      "name": "security.oauth2.client.grant-type",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.security.oauth2.client.token.grant.code.AuthorizationCodeResourceDetails",
      "name": "security.oauth2.client.id",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.security.oauth2.client.token.grant.client.ClientCredentialsResourceDetails",
      "name": "security.oauth2.client.id",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.security.oauth2.client.token.grant.code.AuthorizationCodeResourceDetails",
      "name": "security.oauth2.client.pre-established-redirect-uri",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.security.oauth2.provider.client.BaseClientDetails",
      "name": "security.oauth2.client.refresh-token-validity-seconds",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.security.oauth2.provider.client.BaseClientDetails",
      "name": "security.oauth2.client.registered-redirect-uri",
      "type": "java.util.Set<java.lang.String>"
    },
    {
      "sourceType": "org.springframework.security.oauth2.provider.client.BaseClientDetails",
      "name": "security.oauth2.client.resource-ids",
      "type": "java.util.Set<java.lang.String>"
    },
    {
      "sourceType": "org.springframework.security.oauth2.provider.client.BaseClientDetails",
      "name": "security.oauth2.client.scope",
      "type": "java.util.Set<java.lang.String>"
    },
    {
      "sourceType": "org.springframework.security.oauth2.client.token.grant.code.AuthorizationCodeResourceDetails",
      "name": "security.oauth2.client.scope",
      "type": "java.util.List<java.lang.String>"
    },
    {
      "sourceType": "org.springframework.security.oauth2.client.token.grant.client.ClientCredentialsResourceDetails",
      "name": "security.oauth2.client.scope",
      "type": "java.util.List<java.lang.String>"
    },
    {
      "sourceType": "org.springframework.security.oauth2.client.token.grant.code.AuthorizationCodeResourceDetails",
      "name": "security.oauth2.client.token-name",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.security.oauth2.client.token.grant.client.ClientCredentialsResourceDetails",
      "name": "security.oauth2.client.token-name",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.security.oauth2.client.token.grant.code.AuthorizationCodeResourceDetails",
      "name": "security.oauth2.client.use-current-uri",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.security.oauth2.client.token.grant.code.AuthorizationCodeResourceDetails",
      "name": "security.oauth2.client.user-authorization-uri",
      "type": "java.lang.String"
    },
    {
      "defaultValue": 0,
      "deprecated": true,
      "name": "security.oauth2.resource.filter-order",
      "description": "The order of the filter chain used to authenticate tokens. Default puts it after\n the actuator endpoints and before the default HTTP basic filter chain (catchall).",
      "type": "java.lang.Integer",
      "deprecation": {
        "reason": "The security auto-configuration does no longer provide several security configurations. Their ordering is now explicit in your own security configuration.",
        "level": "error"
      }
    },
    {
      "sourceType": "org.springframework.boot.autoconfigure.security.oauth2.resource.ResourceServerProperties",
      "name": "security.oauth2.resource.id",
      "description": "Identifier of the resource.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.autoconfigure.security.oauth2.resource.ResourceServerProperties$Jwk",
      "name": "security.oauth2.resource.jwk.key-set-uri",
      "description": "The URI to get verification keys to verify the JWT token. This can be set when\n the authorization server returns a set of verification keys.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.autoconfigure.security.oauth2.resource.ResourceServerProperties$Jwt",
      "name": "security.oauth2.resource.jwt.key-uri",
      "description": "The URI of the JWT token. Can be set if the value is not available and the key\n is public.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.autoconfigure.security.oauth2.resource.ResourceServerProperties$Jwt",
      "name": "security.oauth2.resource.jwt.key-value",
      "description": "The verification key of the JWT token. Can either be a symmetric secret or\n PEM-encoded RSA public key. If the value is not available, you can set the URI\n instead.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.autoconfigure.security.oauth2.resource.ResourceServerProperties",
      "defaultValue": true,
      "name": "security.oauth2.resource.prefer-token-info",
      "description": "Use the token info, can be set to false to use the user info.",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.autoconfigure.security.oauth2.resource.ResourceServerProperties",
      "defaultValue": "resource",
      "name": "security.oauth2.resource.service-id",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.autoconfigure.security.oauth2.resource.ResourceServerProperties",
      "name": "security.oauth2.resource.token-info-uri",
      "description": "URI of the token decoding endpoint.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.autoconfigure.security.oauth2.resource.ResourceServerProperties",
      "name": "security.oauth2.resource.token-type",
      "description": "The token type to send when using the userInfoUri.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.autoconfigure.security.oauth2.resource.ResourceServerProperties",
      "name": "security.oauth2.resource.user-info-uri",
      "description": "URI of the user endpoint.",
      "type": "java.lang.String"
    },
    {
      "deprecated": true,
      "name": "security.oauth2.sso.filter-order",
      "description": "Filter order to apply if not providing an explicit WebSecurityConfigurerAdapter (in\n which case the order can be provided there instead).",
      "type": "java.lang.Integer",
      "deprecation": {
        "reason": "The security auto-configuration does no longer provide several security configurations. Their ordering is now explicit in your own security configuration.",
        "level": "error"
      }
    },
    {
      "sourceType": "org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2SsoProperties",
      "defaultValue": "\/login",
      "name": "security.oauth2.sso.login-path",
      "description": "Path to the login page, i.e. the one that triggers the redirect to the OAuth2\n Authorization Server.",
      "type": "java.lang.String"
    }
  ]
}